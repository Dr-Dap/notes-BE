{"version":3,"sources":["Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","noteService","initialNotes","notesToShow","filter","map","find","changedNote","returnedNote","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"uKAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,+BACGH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,QCRtCI,EAAU,oDAmBD,EAjBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAClB,OAAOA,EAASC,SAcL,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC6D5BK,EAxEH,WACV,MAA4BC,mBAAS,IAArC,mBAAQC,EAAR,KAAeC,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRC,IACChB,MAAK,SAAAiB,GACJP,EAASO,QAEV,IAEH,IAgCMC,EAAcL,EAClBJ,EACEA,EAAMU,QAAO,SAAA5B,GAAI,OAAuB,IAAnBA,EAAKG,aAE9B,OACE,gCACE,uCACA,8BACE,yBAAQE,QAAS,kBAAMkB,GAAYD,IAAnC,mBACSA,EAAU,YAAc,WAGnC,6BACGK,EAAYE,KAAI,SAAC7B,GAAD,OACf,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBA1BjC,SAACa,GACjB,sCAAkCA,GAA3C,IACMd,EAAOkB,EAAMY,MAAK,SAAA9B,GAAI,OAAIA,EAAKc,KAAOA,KACtCiB,EAAW,2BAAO/B,GAAP,IAAaG,WAAYH,EAAKG,YAE/CsB,EACYX,EAAIiB,GACXtB,MAAK,SAAAuB,GACJb,EAASD,EAAMW,KAAI,SAAA7B,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAOgC,SAkBOC,CAAmBjC,EAAKc,MAArEd,EAAKc,SAGpB,uBAAMoB,SA5CM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACnBjC,QAASgB,EACTkB,MAAM,IAAIC,MAAOC,cACjBrC,UAAWsC,KAAKC,SAAW,IAE7BjB,EACYY,GACP5B,MAAK,SAAAuB,GACJb,EAASD,EAAMyB,OAAOX,IACtBX,EAAW,QAiCb,UACE,uBACAuB,MAAOxB,EACPyB,SApDmB,SAACV,GACxBW,QAAQC,IAAIZ,EAAMa,OAAOJ,OACzBvB,EAAWc,EAAMa,OAAOJ,UAoDpB,wBAAQK,KAAK,SAAb,yBClERC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e951dfec.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important\n      ? 'make not important' : 'make important'\n  \n    return (\n      <li>\n        {note.content} \n        <button onClick={toggleImportance}>{label}</button>\n      </li>\n    )\n  }\n\nexport default Note;","import axios from 'axios';\nconst baseUrl = 'https://secure-lake-83312.herokuapp.com/api/notes';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => {\n    return response.data\n  })\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { \n    getAll, \n    create, \n    update \n  }","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './Note';\n\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [ notes, setNotes ] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n\n  useEffect(() => {\n    noteService.getAll()\n    .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n    content: newNote,\n    date: new Date().toISOString(),\n    important: Math.random() < 0.5\n  }\n  noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n}\n\nconst toggleImportanceOf = (id) => {\n  const url = `http://localhost:3001/notes/${id}`;\n  const note = notes.find(note => note.id === id);\n  const changedNote = {...note, important: !note.important}\n\n  noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n}\n\n  const notesToShow = showAll ?\n    notes\n    : notes.filter(note => note.important === true);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          Show: {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) =>\n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/>\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n        value={newNote} \n        onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form> \n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport axios from 'axios'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}